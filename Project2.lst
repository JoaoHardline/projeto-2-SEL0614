;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 19/12/2023 17:54:20
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF8F  	GOTO        286
_interrupcao:
;Project2.c,95 :: 		void interrupcao() iv 0x0008 ics ICS_AUTO {
0x0008	0xF015C000  	MOVFF       R0, 21
;Project2.c,96 :: 		if(INTCON.TMR0IF == 1){        // Verifica se o TIMER0 que gerou a interrupcao
0x000C	0xA4F2      	BTFSS       INTCON, 2 
0x000E	0xD00E      	BRA         L_interrupcao13
;Project2.c,97 :: 		numeroDisplay(numero);    // Coloca o numero no display
0x0010	0xF017C016  	MOVFF       _numero, FARG_numeroDisplay_numero
0x0014	0xD835      	RCALL       _numeroDisplay
;Project2.c,98 :: 		numero++;
0x0016	0x2A16      	INCF        _numero, 1 
;Project2.c,100 :: 		if(numero == 9){
0x0018	0x5016      	MOVF        _numero, 0 
0x001A	0x0A09      	XORLW       9
0x001C	0xB4D8      	BTFSC       STATUS, 2 
;Project2.c,101 :: 		numero = 0;  // Reseta contagem
0x001E	0x6A16      	CLRF        _numero 
;Project2.c,102 :: 		}
L_interrupcao14:
;Project2.c,104 :: 		TMR0H = 0XB;   //Recarrega valor do timer
0x0020	0x0E0B      	MOVLW       11
0x0022	0x6ED7      	MOVWF       TMR0H 
;Project2.c,105 :: 		TMR0L = 0XDC;
0x0024	0x0EDC      	MOVLW       220
0x0026	0x6ED6      	MOVWF       TMR0L 
;Project2.c,106 :: 		INTCON.TMR0IF = 0;  //Zera a Flag do TIMER0
0x0028	0x94F2      	BCF         INTCON, 2 
;Project2.c,107 :: 		}
0x002A	0xD013      	BRA         L_interrupcao15
L_interrupcao13:
;Project2.c,108 :: 		else if(INTCON.INT0IF == 1){        // Verifica se a INT0 que gerou a interrupcao
0x002C	0xA2F2      	BTFSS       INTCON, 1 
0x002E	0xD008      	BRA         L_interrupcao16
;Project2.c,109 :: 		T0CON.T0PS1 = 0;   // Atribui um prescaler de 1:32
0x0030	0x92D5      	BCF         T0CON, 1 
;Project2.c,110 :: 		T0CON.T0PS2 = 1;
0x0032	0x84D5      	BSF         T0CON, 2 
;Project2.c,111 :: 		T0CON.TMR0ON = 1;   //Liga TIMER0
0x0034	0x8ED5      	BSF         T0CON, 7 
;Project2.c,112 :: 		numeroDisplay(numero);    // Coloca o numero no display
0x0036	0xF017C016  	MOVFF       _numero, FARG_numeroDisplay_numero
0x003A	0xD822      	RCALL       _numeroDisplay
;Project2.c,113 :: 		INTCON.INT0IF = 0;  // Zera a flag da interrupcao
0x003C	0x92F2      	BCF         INTCON, 1 
;Project2.c,114 :: 		}
0x003E	0xD009      	BRA         L_interrupcao17
L_interrupcao16:
;Project2.c,115 :: 		else if(INTCON3.INT1IF == 1){       // Verifica se a INT1 que gerou a interrupcao
0x0040	0xA0F0      	BTFSS       INTCON3, 0 
0x0042	0xD007      	BRA         L_interrupcao18
;Project2.c,116 :: 		T0CON.T0PS1 = 1;  // Atribui um prescaler de 1:8
0x0044	0x82D5      	BSF         T0CON, 1 
;Project2.c,117 :: 		T0CON.T0PS2 = 0;  // Muda o terceiro bit
0x0046	0x94D5      	BCF         T0CON, 2 
;Project2.c,118 :: 		T0CON.TMR0ON = 1;   //Liga o TIMER0
0x0048	0x8ED5      	BSF         T0CON, 7 
;Project2.c,119 :: 		numeroDisplay(numero);    // Coloca o numero no display
0x004A	0xF017C016  	MOVFF       _numero, FARG_numeroDisplay_numero
0x004E	0xD818      	RCALL       _numeroDisplay
;Project2.c,120 :: 		INTCON3.INT1IF = 0; // Zera a flag da interrupcao
0x0050	0x90F0      	BCF         INTCON3, 0 
;Project2.c,121 :: 		}
L_interrupcao18:
L_interrupcao17:
L_interrupcao15:
;Project2.c,122 :: 		}
L_end_interrupcao:
L__interrupcao26:
0x0052	0xF000C015  	MOVFF       21, R0
0x0056	0x0011      	RETFIE      1
; end of _interrupcao
_configTIMER:
;Project2.c,4 :: 		void configTIMER(){
;Project2.c,22 :: 		T0CON = 0B00000100;  //TIMER_OFF, MOD_16BITS, TIMER, PRES_1:32
0x0058	0x0E04      	MOVLW       4
0x005A	0x6ED5      	MOVWF       T0CON 
;Project2.c,23 :: 		TMR0H = 0XB;   // Carga do valor inicial
0x005C	0x0E0B      	MOVLW       11
0x005E	0x6ED7      	MOVWF       TMR0H 
;Project2.c,24 :: 		TMR0L = 0XDC;
0x0060	0x0EDC      	MOVLW       220
0x0062	0x6ED6      	MOVWF       TMR0L 
;Project2.c,26 :: 		INTCON.TMR0IF = 0;  //zera a Flag do TIMER0
0x0064	0x94F2      	BCF         INTCON, 2 
;Project2.c,27 :: 		}
L_end_configTIMER:
0x0066	0x0012      	RETURN      0
; end of _configTIMER
_configInterrupcao:
;Project2.c,40 :: 		void configInterrupcao(){
;Project2.c,41 :: 		INTCON.GIEH = 1; // Alta prioridade
0x0068	0x8EF2      	BSF         INTCON, 7 
;Project2.c,42 :: 		INTCON.INT0IE = 1;  // Habilita a interrupcao especifica INT0
0x006A	0x88F2      	BSF         INTCON, 4 
;Project2.c,43 :: 		INTCON3.INT1IE = 1;  // Habilita a interrupcao especifica INT1
0x006C	0x86F0      	BSF         INTCON3, 3 
;Project2.c,44 :: 		INTCON.TMR0IE = 1;   //Habilita a interrupcao individual do TIMER0
0x006E	0x8AF2      	BSF         INTCON, 5 
;Project2.c,46 :: 		RCON.IPEN = 1;  // Habilita niveis de prioridade
0x0070	0x8ED0      	BSF         RCON, 7 
;Project2.c,47 :: 		INTCON2.TMR0IP = 1;  // TIMER0 = alta prioridade
0x0072	0x84F1      	BSF         INTCON2, 2 
;Project2.c,48 :: 		INTCON3.INT1IP = 1;       // Coloca INT1 como alta prioridade
0x0074	0x8CF0      	BSF         INTCON3, 6 
;Project2.c,50 :: 		INTCON.INT0IF = 0;    //Flag responsavel em gerar/acionar a interrupcao
0x0076	0x92F2      	BCF         INTCON, 1 
;Project2.c,51 :: 		INTCON3.INT1IF = 0;    //Flag responsavel em gerar/acionar a interrupcao
0x0078	0x90F0      	BCF         INTCON3, 0 
;Project2.c,53 :: 		INTCON2.INTEDG0 = 1;  // Borda de subida   (ao soltar a tecla)
0x007A	0x8CF1      	BSF         INTCON2, 6 
;Project2.c,54 :: 		INTCON2.INTEDG1 = 1;  // Borda de subida   (ao soltar a tecla)
0x007C	0x8AF1      	BSF         INTCON2, 5 
;Project2.c,55 :: 		}
L_end_configInterrupcao:
0x007E	0x0012      	RETURN      0
; end of _configInterrupcao
_numeroDisplay:
;Project2.c,58 :: 		void numeroDisplay(char numero){
;Project2.c,59 :: 		switch(numero){
0x0080	0xD01F      	BRA         L_numeroDisplay0
;Project2.c,60 :: 		case 0:
L_numeroDisplay2:
;Project2.c,61 :: 		LATD = 0b00111111;
0x0082	0x0E3F      	MOVLW       63
0x0084	0x6E8C      	MOVWF       LATD 
;Project2.c,62 :: 		break;
0x0086	0xD03B      	BRA         L_numeroDisplay1
;Project2.c,63 :: 		case 1:
L_numeroDisplay3:
;Project2.c,64 :: 		LATD = 0b00000110;
0x0088	0x0E06      	MOVLW       6
0x008A	0x6E8C      	MOVWF       LATD 
;Project2.c,65 :: 		break;
0x008C	0xD038      	BRA         L_numeroDisplay1
;Project2.c,66 :: 		case 2:
L_numeroDisplay4:
;Project2.c,67 :: 		LATD = 0b01011011;
0x008E	0x0E5B      	MOVLW       91
0x0090	0x6E8C      	MOVWF       LATD 
;Project2.c,68 :: 		break;
0x0092	0xD035      	BRA         L_numeroDisplay1
;Project2.c,69 :: 		case 3:
L_numeroDisplay5:
;Project2.c,70 :: 		LATD = 0b01001111;
0x0094	0x0E4F      	MOVLW       79
0x0096	0x6E8C      	MOVWF       LATD 
;Project2.c,71 :: 		break;
0x0098	0xD032      	BRA         L_numeroDisplay1
;Project2.c,72 :: 		case 4:
L_numeroDisplay6:
;Project2.c,73 :: 		LATD = 0b01100110;
0x009A	0x0E66      	MOVLW       102
0x009C	0x6E8C      	MOVWF       LATD 
;Project2.c,74 :: 		break;
0x009E	0xD02F      	BRA         L_numeroDisplay1
;Project2.c,75 :: 		case 5:
L_numeroDisplay7:
;Project2.c,76 :: 		LATD = 0b01101101;
0x00A0	0x0E6D      	MOVLW       109
0x00A2	0x6E8C      	MOVWF       LATD 
;Project2.c,77 :: 		break;
0x00A4	0xD02C      	BRA         L_numeroDisplay1
;Project2.c,78 :: 		case 6:
L_numeroDisplay8:
;Project2.c,79 :: 		LATD = 0b01111101;
0x00A6	0x0E7D      	MOVLW       125
0x00A8	0x6E8C      	MOVWF       LATD 
;Project2.c,80 :: 		break;
0x00AA	0xD029      	BRA         L_numeroDisplay1
;Project2.c,81 :: 		case 7:
L_numeroDisplay9:
;Project2.c,82 :: 		LATD = 0b00000111;
0x00AC	0x0E07      	MOVLW       7
0x00AE	0x6E8C      	MOVWF       LATD 
;Project2.c,83 :: 		break;
0x00B0	0xD026      	BRA         L_numeroDisplay1
;Project2.c,84 :: 		case 8:
L_numeroDisplay10:
;Project2.c,85 :: 		LATD = 0b01111111;
0x00B2	0x0E7F      	MOVLW       127
0x00B4	0x6E8C      	MOVWF       LATD 
;Project2.c,86 :: 		break;
0x00B6	0xD023      	BRA         L_numeroDisplay1
;Project2.c,87 :: 		case 9:
L_numeroDisplay11:
;Project2.c,88 :: 		LATD = 0b01101111;
0x00B8	0x0E6F      	MOVLW       111
0x00BA	0x6E8C      	MOVWF       LATD 
;Project2.c,89 :: 		break;
0x00BC	0xD020      	BRA         L_numeroDisplay1
;Project2.c,90 :: 		default:
L_numeroDisplay12:
;Project2.c,91 :: 		break;
0x00BE	0xD01F      	BRA         L_numeroDisplay1
;Project2.c,92 :: 		}
L_numeroDisplay0:
0x00C0	0x5017      	MOVF        FARG_numeroDisplay_numero, 0 
0x00C2	0x0A00      	XORLW       0
0x00C4	0xE0DE      	BZ          L_numeroDisplay2
0x00C6	0x5017      	MOVF        FARG_numeroDisplay_numero, 0 
0x00C8	0x0A01      	XORLW       1
0x00CA	0xE0DE      	BZ          L_numeroDisplay3
0x00CC	0x5017      	MOVF        FARG_numeroDisplay_numero, 0 
0x00CE	0x0A02      	XORLW       2
0x00D0	0xE0DE      	BZ          L_numeroDisplay4
0x00D2	0x5017      	MOVF        FARG_numeroDisplay_numero, 0 
0x00D4	0x0A03      	XORLW       3
0x00D6	0xE0DE      	BZ          L_numeroDisplay5
0x00D8	0x5017      	MOVF        FARG_numeroDisplay_numero, 0 
0x00DA	0x0A04      	XORLW       4
0x00DC	0xE0DE      	BZ          L_numeroDisplay6
0x00DE	0x5017      	MOVF        FARG_numeroDisplay_numero, 0 
0x00E0	0x0A05      	XORLW       5
0x00E2	0xE0DE      	BZ          L_numeroDisplay7
0x00E4	0x5017      	MOVF        FARG_numeroDisplay_numero, 0 
0x00E6	0x0A06      	XORLW       6
0x00E8	0xE0DE      	BZ          L_numeroDisplay8
0x00EA	0x5017      	MOVF        FARG_numeroDisplay_numero, 0 
0x00EC	0x0A07      	XORLW       7
0x00EE	0xE0DE      	BZ          L_numeroDisplay9
0x00F0	0x5017      	MOVF        FARG_numeroDisplay_numero, 0 
0x00F2	0x0A08      	XORLW       8
0x00F4	0xE0DE      	BZ          L_numeroDisplay10
0x00F6	0x5017      	MOVF        FARG_numeroDisplay_numero, 0 
0x00F8	0x0A09      	XORLW       9
0x00FA	0xE0DE      	BZ          L_numeroDisplay11
0x00FC	0xD7E0      	BRA         L_numeroDisplay12
L_numeroDisplay1:
;Project2.c,93 :: 		}
L_end_numeroDisplay:
0x00FE	0x0012      	RETURN      0
; end of _numeroDisplay
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0100	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0102	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0106	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0108	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x010A	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x010C	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x010E	0x0012      	RETURN      0
; end of ___CC2DW
_configMCU:
;Project2.c,29 :: 		void configMCU(){
;Project2.c,31 :: 		ADCON1 |= 0X0F;
0x0110	0x0E0F      	MOVLW       15
0x0112	0x12C1      	IORWF       ADCON1, 1 
;Project2.c,33 :: 		TRISB.RB0 = 1; // define o pino 0 da porta B como entrada
0x0114	0x8093      	BSF         TRISB, 0 
;Project2.c,34 :: 		TRISB.RB1 = 1; // define o pino 1 da porta B como entrada
0x0116	0x8293      	BSF         TRISB, 1 
;Project2.c,35 :: 		TRISD = 0;  // define o porta D como saida (Display)
0x0118	0x6A95      	CLRF        TRISD 
;Project2.c,37 :: 		PORTD = 0;  // Display inicialmente apagado
0x011A	0x6A83      	CLRF        PORTD 
;Project2.c,38 :: 		}
L_end_configMCU:
0x011C	0x0012      	RETURN      0
; end of _configMCU
_main:
0x011E	0x6A16      	CLRF        _numero 
;Project2.c,124 :: 		void main() {
;Project2.c,125 :: 		configMCU();
0x0120	0xDFF7      	RCALL       _configMCU
;Project2.c,126 :: 		configTIMER();
0x0122	0xDF9A      	RCALL       _configTIMER
;Project2.c,127 :: 		configInterrupcao();
0x0124	0xDFA1      	RCALL       _configInterrupcao
;Project2.c,129 :: 		while(1);
L_main19:
0x0126	0xD7FF      	BRA         L_main19
;Project2.c,130 :: 		}
L_end_main:
0x0128	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [80]    _interrupcao
0x0058      [16]    _configTIMER
0x0068      [24]    _configInterrupcao
0x0080     [128]    _numeroDisplay
0x0100      [16]    ___CC2DW
0x0110      [14]    _configMCU
0x011E      [12]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [1]    _numero
0x0017       [1]    FARG_numeroDisplay_numero
0x0F83       [1]    PORTD
0x0F8C       [1]    LATD
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD0       [1]    RCON
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [1]    INTCON3
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
